var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Nmrc","category":"page"},{"location":"#Nmrc","page":"Home","title":"Nmrc","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Nmrc.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Nmrc.jl can be installed by opening a Julia REPL and typing:","category":"page"},{"location":"","page":"Home","title":"Home","text":"]add https://github.com/peakfind/Nmrc.jl.git","category":"page"},{"location":"#Methods-Implemented-in-Nmrc.jl","page":"Home","title":"Methods Implemented in Nmrc.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Use PML and FEM to estimate the exceptional values (quasi momentum).\nFEM with transparent boundary condition (DtN map).","category":"page"},{"location":"#TBD","page":"Home","title":"TBD","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"High order quadrature rules on facets may change the sparse pattern of the vector Theta^n.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Nmrc]","category":"page"},{"location":"#Nmrc.Incident","page":"Home","title":"Nmrc.Incident","text":"Incident\n\nSome parameters related to the incident field.\n\nParameters\n\nk: the wave number\nθ: the incident field\nα: α = k * sin(θ)\nβ: β = k * cos(θ)\n\n\n\n\n\n","category":"type"},{"location":"#Nmrc.Incident-Tuple{Float64, Float64}","page":"Home","title":"Nmrc.Incident","text":"Incident(k::Float64, θ::Float64)\n\nDefine the incident field with the wavenumber k and the incident field θ.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.PML","page":"Home","title":"Nmrc.PML","text":"Pml\n\nInformation on PML layer and coordinate transformation.\n\n\n\n\n\n","category":"type"},{"location":"#Nmrc.allocate_matrices-Tuple{Ferrite.DofHandler, Ferrite.ConstraintHandler}","page":"Home","title":"Nmrc.allocate_matrices","text":"allocate_matrices(dof::DofHandler, cst::ConstraintHandler)\n\nAllocate the complex-valued stiffness matrices.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.allocate_stiff_matrix-Tuple{Ferrite.DofHandler, Ferrite.ConstraintHandler, Any}","page":"Home","title":"Nmrc.allocate_stiff_matrix","text":"allocate_stiff_matrix(dofhandler::DofHandler, csthandler::ConstraintHandler, dofs)\n\nCreate a sparse pattern for the stiffness matrix. We need to add extra entries  due to the DtN map by hand.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.apply_all_bds!-Tuple{Union{LinearAlgebra.Symmetric, SparseArrays.SparseMatrixCSC}, Ferrite.ConstraintHandler}","page":"Home","title":"Nmrc.apply_all_bds!","text":"apply_all_bds!(K::Union{SparseMatrixCSC, Symmetric}, ch::ConstraintHandler)\napply_all_bds!(KK::Union{SparseMatrixCSC, Symmetric}, f::AbstractVector, ch::ConstraintHandler, applyzero::Bool = false)\n\nImpose the periodic boundary condition and the Dirichlet boundary condition on the matrices.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.assemble_A-Tuple{Ferrite.CellValues, Ferrite.DofHandler, SparseArrays.SparseMatrixCSC, Incident}","page":"Home","title":"Nmrc.assemble_A","text":"assemble_A(cv::CellValues, dh::DofHandler, A::SparseMatrixCSC, inc::Incident)\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.assemble_A0-Tuple{Ferrite.CellValues, Ferrite.DofHandler, SparseArrays.SparseMatrixCSC, Function, PML, Any}","page":"Home","title":"Nmrc.assemble_A0","text":"assemble_A0(cv, dh, A₀, medium, p, k)\n\nAssemble the zero order term in the quadratic eigenvalue problem.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.assemble_A1-Tuple{Ferrite.CellValues, Ferrite.DofHandler, SparseArrays.SparseMatrixCSC, PML}","page":"Home","title":"Nmrc.assemble_A1","text":"assemble_A1(cv::CellValues, dh::DofHandler, A₁::SparseMatrixCSC, p::PML)\n\nAssemble the first order term in the quadratic eigenvalue problem.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.assemble_A2-Tuple{Ferrite.CellValues, Ferrite.DofHandler, SparseArrays.SparseMatrixCSC, PML}","page":"Home","title":"Nmrc.assemble_A2","text":"assemble_A2(cv::CellValues, dh::DofHandler, A₂::SparseMatrixCSC, p::PML)\n\nAssemble the second order term in the quadratic eigenvalue problem.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.assemble_load-Tuple{Ferrite.FacetValues, Ferrite.DofHandler, Any, Any, Incident, Any}","page":"Home","title":"Nmrc.assemble_load","text":"assemble_load(fv::FacetValues, dh::DofHandler, facetset, f, inc::Incident, height)\n\nAssemble the load vector due to the incident field.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.assemble_tbc-Tuple{Ferrite.FacetValues, Ferrite.DofHandler, Incident, Vararg{Any, 4}}","page":"Home","title":"Nmrc.assemble_tbc","text":"assemble_tbc(fv::FacetValues, dh::DofHandler, inc::Incident, F::SparseMatrixCSC, facetset, N, dofsDtN)\n\nAssemble the TBC matrix.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.beta_n-Tuple{Incident, Any}","page":"Home","title":"Nmrc.beta_n","text":"beta_n(inc::Incident, n)\n\nCompute the βₙ.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.compute_coef!-Tuple{Ferrite.FacetValues, Ferrite.DofHandler, Any, SparseArrays.SparseVector, Any}","page":"Home","title":"Nmrc.compute_coef!","text":"compute_coef!(fv::FacetValues, dh::DofHandler, θ::SparseVector, facetset, n)\n\nCompute Θⁿ on the facetset. Actually the computation of the TBC matrix reduces  to the computation of the vector Θⁿ.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.compute_scaling-Union{Tuple{M}, Tuple{T}, Tuple{M, M, M}} where {T, M<:AbstractMatrix{T}}","page":"Home","title":"Nmrc.compute_scaling","text":"compute_scaling(A₀::M, A₁::M, A₂::M; scaling=:nothing::Symbol) where {T,M<:AbstractMatrix{T}}\n\nTBW\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.coord_transform-Tuple{Any, PML}","page":"Home","title":"Nmrc.coord_transform","text":"coord_transform(x₂, p::PML)\n\nCoordinate transformation of PML method.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.dofs_on_dtn-Tuple{Ferrite.DofHandler, Symbol, Any}","page":"Home","title":"Nmrc.dofs_on_dtn","text":"dofs_on_dtn(dh::DofHandler, field::Symbol, facetset)\n\nExtract the global indices of Dofs associated to the artificial boundary.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.get_width-Tuple{PML}","page":"Home","title":"Nmrc.get_width","text":"get_width(p::PML)\n\nGet the width of the PML layer.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.periodic_cell","page":"Home","title":"Nmrc.periodic_cell","text":"periodic_cell(lc=0.5; height)\n\nGenerate a mesh for the periodic cell with period 2π and height height.\n\nArguments\n\nlc: the mesh size near points\nheight: the height of the periodic cell\n\nPoints\n\n 4 ------------ 3\n |              |\n |              |\n 1 ------------ 2\n\nLines\n\n . ---- l3 ---- .\n l4             l2\n . ---- l1 ---- .\n\n\n\n\n\n","category":"function"},{"location":"#Nmrc.setup_bcs-Tuple{Ferrite.DofHandler}","page":"Home","title":"Nmrc.setup_bcs","text":"setup_bcs(dh::DofHandler)\n\nSet the periodic boundary condition (\"left\" and \"right\") and  Dirichelt boundary condition (\"bottom\").\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.setup_bdcs-Tuple{Ferrite.DofHandler, Any}","page":"Home","title":"Nmrc.setup_bdcs","text":"setup_bdcs(dof::DofHandler, d)\n\nSet the periodic boundary condition (\"left\" and \"right\") and  Dirichelt boundary condition (\"bottom\" and \"top\").\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.setup_dofs-Tuple{Ferrite.Grid, Any}","page":"Home","title":"Nmrc.setup_dofs","text":"setup_dofs(grid::Grid, ip)\n\nSetup degree of freedoms.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.setup_fevs-Tuple{Any}","page":"Home","title":"Nmrc.setup_fevs","text":"setup_fevs(ip)\n\nDefine quadrature rules on Reference triangle and setup FE values.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.setup_grid-Tuple{}","page":"Home","title":"Nmrc.setup_grid","text":"setup_grid(;d=2π, ĥ=1.5, δ=2.0, lc=0.5, lp=0.5, vtk=false)\n\nGenerate a mesh by julia interface for Gmsh and read the .msh file by FerriteGmsh.\n\nArguments\n\nd: the period of the periodic layer\nĥ: the start of the PML layer\nδ: the height of the PML layer\nlc: mesh size near the periodic layer\nlp: mesh size in the PML layer\nvtk: write .vtk file, default is false\n\nPoints\n\n 5 ------------- 4\n |               |\n 6               3\n |               |\n 1 ------------- 2\n\nLines\n\n . ----- l4 ----- . \n l5               l3\n .                .\n l6               l2 \n . ----- l1 ----- .\n\nMisc\n\nWe can generate a *.vtk file by replace the do end block with gmsh.write(*.vtk)\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.setup_vals-Tuple{Any}","page":"Home","title":"Nmrc.setup_vals","text":"setup_vals(ip)\n\nSet up CellValues and FacetValues by using interpolation ip. Here we need  to define FacetValues because the load vector and the TBC matrix contains  integral on the boundary.\n\n\n\n\n\n","category":"method"},{"location":"#Nmrc.sub_preserve_structure-Tuple{SparseArrays.SparseMatrixCSC, SparseArrays.SparseMatrixCSC}","page":"Home","title":"Nmrc.sub_preserve_structure","text":"sub_preserve_structure(A::SparseMatrixCSC, B::SparseMatrixCSC)\n\nSubtract two sparse matrix without changing the sparse pattern. A and B  should have the same sparse pattern.\n\n\n\n\n\n","category":"method"}]
}
